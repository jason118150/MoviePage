{"version":3,"sources":["serviceWorker.js","js/movielist.js","js/moviepage.js","js/detail.js","style/globalstyle.js","index.js"],"names":["Boolean","window","location","hostname","match","ListContainer","styled","div","ListTitle","ListCardContainer","ul","ListCardStyle","li","props","img","MovieList","title","data","map","result","id","to","imdbID","key","Poster","MovieWrapper","MovieTitle","Footer","Moviepage","useState","soonMovie","setsoonMovie","favoMovie","setfavoMovie","nowMovie","setnowMovie","isLoading","setisLoading","useEffect","pagesize","i","fetch","then","response","json","Search","catch","error","console","log","PAGESIZE","length","DetailContainer","DetailPoster","DetailData","DetailContext","DetailButton","button","Detail","path","login","pathname","slice","setdata","isDetailLoading","setisDetailLoading","Title","Year","Runtime","Director","imdbRating","ResetStyle","createGlobalStyle","GlobalStyle","App","basename","process","exact","component","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.673751e6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components'\n\n//styled-component\nconst ListContainer = styled.div`\n    width: 100%;\n    padding-left: 7%;\n    padding-right: 7%;\n    height: 300px;\n`;\nconst ListTitle = styled.div`\n    font-size: 25px;\n`;\nconst ListCardContainer = styled.ul`\n    overflow-x: scroll;\n    scroll-snap-type: x mandatory;\n    scroll-snap-points-x: repeat(3rem);\n    display: flex;\n    padding-top: 5px;\n    table-layout: fixed;\n`;\nconst ListCardStyle = styled.li`\n    margin-right: 3px;\n    margin-left: 3px;\n    display: block;\n    scroll-snap-align: center;\n    height: 250px;\n    min-width: 200px;\n    background-image: url('${props => props.img}');\n    background-repeat: no-repeat;\n    background-position: center;\n`;\n\nconst MovieList = (props) => {\n    return (\n        <ListContainer>\n            <ListTitle>{props.title}</ListTitle>\n            <ListCardContainer>\n                {props.data.map((result, id) => \n                    <Link to={`/${result.imdbID}`} key={id}>\n                        <ListCardStyle img={result.Poster}></ListCardStyle>\n                    </Link>\n                )}\n            </ListCardContainer>\n        </ListContainer>\n    );\n}\n\nexport default MovieList;","import React, { useState, useEffect } from 'react';\nimport MovieList from './movielist';\nimport styled from 'styled-components'\n\n//styled-component\nexport const MovieWrapper = styled.div`\n    font-family: \"IBM Plex Mono\", Futura, sans-serif;\n    min-width: 100%;\n`;\nexport const MovieTitle = styled.div`\n    width: 100%;\n    height: 80px;\n    font-size: 50px;\n    @media(max-width: 4097px){\n      padding-left: 5%;\n      padding-top: 15px;\n    }\n    @media (max-width: 426px) {\n      padding-left: 50%;\n      transform: translateX(-40%);\n    }\n`;\nexport const Footer = styled.div`\n    position: fixed;\n    font-size: 18px;\n    bottom: 0;\n    right: 0;\n    color: #C0C0C0;\n    background-color: (0, 0, 0);\n    margin-right: 20px;\n    margin-bottom: 5px;\n    @media (max-width: 426px) {\n      display: none;\n    }\n`;\n\n// const MovieBackground = styled.div`\n//     position: fixed;\n//     width: 100vw;\n//     height: 100vh;\n//     background: url('https://unsplash.com/photos/2uwFEAGUm6E') no-repeat center center fixed;\n//     border: 1px solid black;\n// `;\n\nconst Moviepage = () => {\n  const [soonMovie, setsoonMovie] = useState([]); // 即將上映\n  const [favoMovie, setfavoMovie] = useState([]); // 最喜愛\n  const [nowMovie, setnowMovie] = useState([]);   // 正在上映\n  const [isLoading, setisLoading] = useState(true); // 資料到了沒\n  const PAGESIZE = 3; // 需要的資料數量\n\n  useEffect(() => {\n    const fetchOMDB = (pagesize) => {\n      fetch(`https://www.omdbapi.com/?i=tt3896198&apikey=69931bf9&s=love&type=movie&y=2019&page=${pagesize}`)\n      .then(response => response.json())\n      .then(response => {\n        setsoonMovie(soonMovie => [...soonMovie, ...response.Search]);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n      fetch(`https://www.omdbapi.com/?i=tt3896198&apikey=69931bf9&s=love&type=movie&y=2018&page=${pagesize}`)\n      .then(response => response.json())\n      .then(response => {\n        setnowMovie(nowMovie =>[...nowMovie, ...response.Search]);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n      fetch(`https://www.omdbapi.com/?i=tt3896198&apikey=69931bf9&s=love&type=movie&y=2017&page=${pagesize}`)\n      .then(response => response.json())\n      .then(response => {\n        setfavoMovie(favoMovie => [...favoMovie, ...response.Search]);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    }\n    // 根據pagesize存取pagesize*10的資料\n    for(let i = 1; i <= PAGESIZE; i++){\n      fetchOMDB(i);\n    }\n  }, []);\n  // 由於hook的set不同步，所以加入底下的useEffect確定state都已經更新完成\n  useEffect(() => console.log(soonMovie),[soonMovie]);\n  useEffect(() => console.log(favoMovie),[favoMovie]);\n  useEffect(() => console.log(nowMovie),[nowMovie]);\n  // 若API都順利存取完資料，就可以顯示Movie頁面\n  useEffect(() => {\n    if(soonMovie.length === PAGESIZE*10 && favoMovie.length === PAGESIZE*10 && nowMovie.length === PAGESIZE*10)\n      setisLoading(false);\n  }, [soonMovie.length, favoMovie.length, nowMovie.length]);\n  return (\n    <div>\n    { isLoading ? <span>Loading...</span> :\n      <MovieWrapper>\n        <MovieTitle>Moviepage</MovieTitle>\n        <MovieList title=\"近期上映\" data={soonMovie} />\n        <MovieList title=\"喜愛的電影\" data={favoMovie} />\n        <MovieList title=\"上映中電影\" data={nowMovie} />\n        <Footer>Copyright (c) 李彥杰</Footer>\n      </MovieWrapper>\n    }\n    </div>\n  );\n}\n\nexport default Moviepage;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components'\nimport { MovieWrapper, MovieTitle, Footer } from './moviepage';\n\n// styled-component\nconst DetailContainer = styled.div`\n    @media (max-width: 4097px) {\n        margin-left: 20%;\n        display: flex;\n        margin-top: 50px;\n    }\n    @media (max-width: 769px) {\n        margin: 0 auto;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n    \n`;\nconst DetailPoster = styled.div`\n    background-image: url(${props => props.img});\n    height: 480px;\n    width: 320px;\n    background-repeat: no-repeat;\n    background-position: center;\n`;\nconst DetailData = styled.div`\n    font-size: 30px;\n    padding-left: 40px;\n    padding-top: 40px;\n    @media (max-width: 769px) {\n        font-size: 25px;\n        padding-top: 0;\n    }\n    @media (max-width: 426px) {\n        font-size: 23px;\n        padding-top: 0;\n    }\n`;\nconst DetailContext = styled.div`\n    margin-top: 10px;\n    margin-bottom: 20px;\n`;\nconst DetailButton = styled.button`\n    border: 1px solid black;\n    margin-left: 40%;\n    margin-top: 50px;\n    trasform: translateX(-50%);\n    height: 50px;\n    width: 100px;\n    border-radius: 30%;\n    &:hover{\n        background-color: #C0C0C0;\n        cursor: pointer;\n    }\n    @media (max-width: 769px) {\n        margin-top: 0;\n    }\n    @media (max-width: 426px) {\n        margin-bottom: 10px;\n    }\n`;\n\nconst Detail = (path) => {\n    const login = path.location.pathname.slice(1);\n    const [data, setdata] = useState([]);\n    const [isDetailLoading, setisDetailLoading] = useState(true);\n    useEffect(() => {\n        const fetchAPI = () => {\n            fetch(`https://www.omdbapi.com/?i=${login}&apikey=69931bf9&plot=full`)\n            .then(response => response.json())\n            .then(response => {\n                setdata(response);\n            })\n            .catch(error => {\n              console.log(error);\n            });\n        }\n        fetchAPI();\n    }, [login]);\n    useEffect(() => console.log(data),[data]);\n    useEffect(() => {if(data.Title) setisDetailLoading(false)}, [data]);\n\n    return (\n        <div>\n            { isDetailLoading ? <span>Loading...</span> :\n                <MovieWrapper>\n                    <MovieTitle>Moviepage</MovieTitle>\n                    <DetailContainer>\n                        <DetailPoster img={data.Poster}></DetailPoster>\n                        <DetailData>\n                            <DetailContext>電影名稱：{data.Title}</DetailContext>\n                            <DetailContext>電影年份：{data.Year}</DetailContext>\n                            <DetailContext>電影總長：{data.Runtime}</DetailContext>\n                            <DetailContext>導演：{data.Director}</DetailContext>\n                            <DetailContext>IMDB評分：{data.imdbRating}</DetailContext>\n                        </DetailData>\n                    </DetailContainer>\n                    <Link to={{ pathname: `/`, }} >\n                        <DetailButton>回上一頁</DetailButton>\n                    </Link>\n                    <Footer>Copyright (c) 李彥杰</Footer>\n                </MovieWrapper>\n            }\n        </div>\n    );\n}\n\nexport default Detail;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const ResetStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  box-sizing: border-box;\n}\naddress, caption, cite, code, dfn, em, strong, th, var, b {\n  font-weight: normal;\n  font-style: normal;\n}\nabbr, acronym {\n  border: 0;\n}\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n  display: block;\n}\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\nhtml {\n  text-size-adjust: 100%;\n  box-sizing: border-box;\n}\nbody {\n    line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote {\n  &:before,   &:after {\n    content: '';\n    content: none;\n  }\n}\nq {\n  &:before,   &:after {\n    content: '';\n    content: none;\n  }\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ncaption, th {\n  text-align: left;\n}\ntextarea {\n  resize: none;\n}\na {\n  text-decoration: none;\n  cursor: pointer;\n}\nbutton {\n  padding: 0;\n  border: none;\n  background: none;\n}\n`;\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n  font-size: 62.5%; \n  font-family: 'HelveticaNeue', Helvetica, Arial, 'Lucida Grande', sans-serif;\n}\n`;","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Moviepage from './js/moviepage.js';\nimport Detail from './js/detail.js';\nimport { ResetStyle, GlobalStyle } from './style/globalstyle';\n\n\nconst App = () => {\n  return (\n    <div>\n      <ResetStyle />\n      <GlobalStyle />\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact component={Moviepage} />\n          <Route path=\"/:index\" component={Detail} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nrender(<App />,document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}